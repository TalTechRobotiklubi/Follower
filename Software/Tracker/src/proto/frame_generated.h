// automatically generated by the FlatBuffers compiler, do not modify

#ifndef FLATBUFFERS_GENERATED_FRAME_PROTO_H_
#define FLATBUFFERS_GENERATED_FRAME_PROTO_H_

#include "flatbuffers/flatbuffers.h"

namespace proto {

struct Frame;

struct Frame FLATBUFFERS_FINAL_CLASS : private flatbuffers::Table {
  enum {
    VT_DEPTH = 4
  };
  const flatbuffers::Vector<uint8_t> *depth() const { return GetPointer<const flatbuffers::Vector<uint8_t> *>(VT_DEPTH); }
  bool Verify(flatbuffers::Verifier &verifier) const {
    return VerifyTableStart(verifier) &&
           VerifyField<flatbuffers::uoffset_t>(verifier, VT_DEPTH) &&
           verifier.Verify(depth()) &&
           verifier.EndTable();
  }
};

struct FrameBuilder {
  flatbuffers::FlatBufferBuilder &fbb_;
  flatbuffers::uoffset_t start_;
  void add_depth(flatbuffers::Offset<flatbuffers::Vector<uint8_t>> depth) { fbb_.AddOffset(Frame::VT_DEPTH, depth); }
  FrameBuilder(flatbuffers::FlatBufferBuilder &_fbb) : fbb_(_fbb) { start_ = fbb_.StartTable(); }
  FrameBuilder &operator=(const FrameBuilder &);
  flatbuffers::Offset<Frame> Finish() {
    auto o = flatbuffers::Offset<Frame>(fbb_.EndTable(start_, 1));
    return o;
  }
};

inline flatbuffers::Offset<Frame> CreateFrame(flatbuffers::FlatBufferBuilder &_fbb,
    flatbuffers::Offset<flatbuffers::Vector<uint8_t>> depth = 0) {
  FrameBuilder builder_(_fbb);
  builder_.add_depth(depth);
  return builder_.Finish();
}

inline flatbuffers::Offset<Frame> CreateFrameDirect(flatbuffers::FlatBufferBuilder &_fbb,
    const std::vector<uint8_t> *depth = nullptr) {
  return CreateFrame(_fbb, depth ? _fbb.CreateVector<uint8_t>(*depth) : 0);
}

inline const proto::Frame *GetFrame(const void *buf) { return flatbuffers::GetRoot<proto::Frame>(buf); }

inline bool VerifyFrameBuffer(flatbuffers::Verifier &verifier) { return verifier.VerifyBuffer<proto::Frame>(nullptr); }

inline void FinishFrameBuffer(flatbuffers::FlatBufferBuilder &fbb, flatbuffers::Offset<proto::Frame> root) { fbb.Finish(root); }

}  // namespace proto

#endif  // FLATBUFFERS_GENERATED_FRAME_PROTO_H_
